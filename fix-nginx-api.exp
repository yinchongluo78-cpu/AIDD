#!/usr/bin/expect -f

set timeout 30

spawn ssh root@120.24.22.244
expect "password:"
send "Lyc001286\r"
expect "root@*"

send "echo '=== 检查当前Nginx配置 ==='\r"
expect "root@*"

send "cat /etc/nginx/nginx.conf | grep -A 20 'server {'\r"
expect "root@*"

send "echo '=== 创建正确的Nginx配置 ==='\r"
expect "root@*"

send "cat > /etc/nginx/nginx.conf << 'EOF'
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '\$remote_addr - \$remote_user [\$time_local] \"\$request\" '
                      '\$status \$body_size \"\$http_referer\" '
                      '\"\$http_user_agent\" \"\$http_x_forwarded_for\"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    client_max_body_size 120M;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    server {
        listen       80;
        server_name  120.24.22.244;

        location /api/ {
            proxy_pass http://localhost:3001/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade \$http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$scheme;
            proxy_cache_bypass \$http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        location / {
            root /var/www/lyc-ai/web/dist;
            try_files \$uri \$uri/ /index.html;
            index index.html;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
EOF\r"
expect "root@*"

send "echo '=== 测试Nginx配置 ==='\r"
expect "root@*"

send "nginx -t\r"
expect "root@*"

send "echo '=== 重启Nginx ==='\r"
expect "root@*"

send "systemctl reload nginx\r"
expect "root@*"

send "echo '=== 测试API代理 ==='\r"
expect "root@*"

send "curl -s http://localhost/api/health\r"
expect "root@*"

send "exit\r"
expect eof